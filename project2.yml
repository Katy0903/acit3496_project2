---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: video-streaming
---
# Web App Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
  namespace: video-streaming
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
    spec:
      containers:
      - name: web-app
        image: paulohernandez/web-app:latest
        ports:
        - containerPort: 8080
        env:
        - name: MYSQL_HOST
          value: mysql
        - name: MYSQL_USER
          value: root
        - name: MYSQL_PASSWORD
          value: rootpassword
        - name: MYSQL_DB
          value: video_db
        volumeMounts:
        - name: storage
          mountPath: /storage
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: video-storage-pvc
---
# Web App Service (NodePort)
apiVersion: v1
kind: Service
metadata:
  name: web-app
  namespace: video-streaming
spec:
  type: NodePort
  selector:
    app: web-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30080
---
# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: video-streaming
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: rootpassword
        - name: MYSQL_DATABASE
          value: video_db
        volumeMounts:
        - name: mysql-pv
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-pv
        persistentVolumeClaim:
          claimName: mysql-pvc
---
# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: video-streaming
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
---
# Storage (File System) Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage
  namespace: video-streaming
spec:
  selector:
    matchLabels:
      app: storage
  template:
    metadata:
      labels:
        app: storage
    spec:
      containers:
      - name: storage
        image: paulohernandez/storage:latest
        volumeMounts:
        - name: storage
          mountPath: /storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: video-storage-pvc
---
# Storage Service
apiVersion: v1
kind: Service
metadata:
  name: storage
  namespace: video-streaming
spec:
  selector:
    app: storage
  ports:
    - port: 80
---
# Persistent Volume Claim for Storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: video-storage-pvc
  namespace: video-streaming
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# Persistent Volume Claim for MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: video-streaming
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Horizontal Pod Autoscaler for Web App
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-app-hpa
  namespace: video-streaming
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-app
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
